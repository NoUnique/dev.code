# docker-compose script to build code-server dev environment.
#
# Author : NoUnique (kofmap@gmail.com)
# Copyright 2022 NoUnique. All Rights Reserved

version: '2.4'

networks:
  traefik:
    external: true

services:
  dev:
    image: codercom/code-server:4.12.0
    container_name: code-server
    hostname: ${COMPOSE_IMAGE_NAME}
    user: ${PUID}:${PGID}
    group_add:
      - ${DOCKER_GID}
    environment:
      - DOCKER_USER=${USER}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      # favicon
      - ../favicon:/usr/lib/code-server/src/browser/media:ro
      # docker-in-docker
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - /usr/local/bin/docker-compose:/usr/bin/docker-compose
      # home
      - ~/.gitconfig:/home/coder/.gitconfig
      - ~/.bashrc:/home/coder/.bashrc
      - ~/.ssh:/home/coder/.ssh
      - ./data:/home/coder/.local  # to preserve local data (includes extensions)
      # workspace
      - ..:/home/coder/workspace
    restart: unless-stopped
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      # code-server
      - traefik.http.routers.${COMPOSE_IMAGE_NAME}.priority=1
      - traefik.http.routers.${COMPOSE_IMAGE_NAME}.rule=PathPrefix(`/${COMPOSE_IMAGE_NAME}`)
      - traefik.http.routers.${COMPOSE_IMAGE_NAME}.service=${COMPOSE_IMAGE_NAME}
      - traefik.http.services.${COMPOSE_IMAGE_NAME}.loadbalancer.serverstransport=docker-transport@file
      - traefik.http.routers.${COMPOSE_IMAGE_NAME}.middlewares=basicauth@file,${COMPOSE_IMAGE_NAME}-redirect,${COMPOSE_IMAGE_NAME}-strip
      - traefik.http.middlewares.${COMPOSE_IMAGE_NAME}-strip.stripprefix.prefixes=/${COMPOSE_IMAGE_NAME}
      - traefik.http.middlewares.${COMPOSE_IMAGE_NAME}-redirect.redirectregex.regex=^(?:.*:\/\/)?([^:\/]*?\.[^\/]*).*\/${COMPOSE_IMAGE_NAME}$$
      - traefik.http.middlewares.${COMPOSE_IMAGE_NAME}-redirect.redirectregex.replacement=https://$${1}/${COMPOSE_IMAGE_NAME}/
      - traefik.http.middlewares.${COMPOSE_IMAGE_NAME}-redirect.redirectregex.permanent=true
      # proxy
      - traefik.http.routers.${COMPOSE_IMAGE_NAME}-proxy.priority=2
      - traefik.http.routers.${COMPOSE_IMAGE_NAME}-proxy.rule=PathPrefix(`/${COMPOSE_IMAGE_NAME}/proxy`) || HeadersRegexp(`Referer`, `^(?:.*:\/\/)?([^:\/]*?\.[^\/]*).*\/${COMPOSE_IMAGE_NAME}\/proxy\/.*`)
      - traefik.http.routers.${COMPOSE_IMAGE_NAME}-proxy.service=${COMPOSE_IMAGE_NAME}
      - traefik.http.routers.${COMPOSE_IMAGE_NAME}-proxy.middlewares=basicauth@file,${COMPOSE_IMAGE_NAME}-proxy-redirect,${COMPOSE_IMAGE_NAME}-tensorboard-font,${COMPOSE_IMAGE_NAME}-strip
      - traefik.http.middlewares.${COMPOSE_IMAGE_NAME}-proxy-redirect.redirectregex.regex=^(?:.*:\/\/)?([^:\/]*?\.[^\/]*).*\/${COMPOSE_IMAGE_NAME}\/proxy\/([0-9]+)$$
      - traefik.http.middlewares.${COMPOSE_IMAGE_NAME}-proxy-redirect.redirectregex.replacement=https://$${1}/${COMPOSE_IMAGE_NAME}/proxy/$${2}/
      - traefik.http.middlewares.${COMPOSE_IMAGE_NAME}-proxy-redirect.redirectregex.permanent=true
      # tensorboard
      # BUGFIX) misleading '/' in font path of tensorboard https://github.com/tensorflow/tensorboard/issues/1885
      #         it still not resolved in v2.8.0 from Feb 2019 !!
      # The port of the Tensorboard may not be the default value of 6006, or may be assigned to >6006 when running multiple Tensorboard instances,
      # but I add the following path-replaces to make all the instances work without errors when a Tensorboard that uses port 6006 is running.
      - traefik.http.middlewares.${COMPOSE_IMAGE_NAME}-tensorboard-font.replacepathregex.regex=^\/(font-roboto.*)
      - traefik.http.middlewares.${COMPOSE_IMAGE_NAME}-tensorboard-font.replacepathregex.replacement=/${COMPOSE_IMAGE_NAME}/proxy/6006/$${1}
    entrypoint:
      - /bin/bash
      - -c
      - |
        # Install TensorBoard
        sudo apt update
        sudo apt install -y python3-pip
        pip install tensorboard
        # Add group for docker-in-docker
        sudo groupadd -g ${DOCKER_GID} docker
        sudo usermod -aG docker `getent passwd ${PUID} | cut -d: -f1`

        # Install Extensions
        EXTENSION_DIR=./workspace/.vscode/extensions
        mkdir -p $${EXTENSION_DIR}
        jq -rc '.recommendations[]' ./workspace/.vscode/extensions.json | while read i; do
          code-server \
            --extensions-dir $${EXTENSION_DIR} \
            --install-extension $${i}
          ls $${EXTENSION_DIR}/$${i}* > /dev/null 2>&1
          if [ $$? -ne 0 ]; then
            echo "Installing $${i} from GitHub";
            IFS="." read -ra extname <<< "$${i}"
            curl -o $${EXTENSION_DIR}/$${i}.vsix -L \
              https://github.gallery.vsassets.io/_apis/public/gallery/publisher/$${extname[0]}/extension/$${extname[1]}/latest/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage
            code-server \
              --extensions-dir $${EXTENSION_DIR} \
              --install-extension $${EXTENSION_DIR}/$${i}.vsix
          fi
        done

        # Run code-server
        /usr/bin/entrypoint.sh \
            --bind-addr 0.0.0.0:8080 \
            --auth "none" \
            --app-name nounique-code \
            ./workspace
